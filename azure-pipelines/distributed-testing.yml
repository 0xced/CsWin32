parameters:
- name: windowsPool
  type: object

jobs:
- job: Testing
  dependsOn: Windows
  timeoutInMinutes: 120
  pool: ${{ parameters.windowsPool }}
  strategy:
    parallel: 4
  steps:
  - download: current
    artifact: tests-Windows
    displayName: ðŸ”» Download tests
  - task: VSTest@2
    displayName: ðŸ§ª Testing
    inputs:
      testSelector: testAssemblies
      testAssemblyVer2: |
        **\*tests.dll
        !**\*TestAdapter.dll
      searchFolder: $(Pipeline.Workspace)/tests-Windows
      runSettingsFile: azure-pipelines/test.runsettings
      runInParallel: true
      distributionBatchType: basedOnExecutionTime
      failOnMinTestsNotRun: true
      diagnosticsEnabled: true

  #- powershell: azure-pipelines/dotnet-test-cloud.ps1 -Configuration $(BuildConfiguration) -Agent $(Agent.JobName) -PublishResults
  #  displayName: ðŸ§ª dotnet test
  #  condition: and(succeeded(), ${{ parameters.RunTests }})
